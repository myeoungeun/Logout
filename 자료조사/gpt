<pre>
웹소켓으로 웹페이지에 실시간 알람을 띄우는 방법

1. 서버 측 구현: 서버 측에서는 웹소켓을 지원하는 프레임워크나 라이브러리를 사용하여 클라이언트의 연결을 관리합니다. Node.js의 Socket.IO, Python의 Flask-SocketIO, 또는 Java의 Spring WebSocket 등이 있습니다. 서버는 알람을 받거나 생성할 때마다 연결된 모든 클라이언트에게 알람을 전송합니다. 이를 위해 알람을 전달할 때 웹소켓을 사용합니다.
2. 클라이언트 측 구현: 웹 브라우저에서는 JavaScript를 사용하여 웹소켓에 연결하고, 서버로부터 알람을 받습니다. 받은 알람을 사용자에게 표시하기 위해 DOM 조작이 필요합니다. 일반적으로는 HTML 요소를 동적으로 생성하거나 내용을 변경하여 알람을 표시합니다.


새로고침을 안 하는데 웹페이지에 알람을 띄울 수 있는 이유
1. 양방향 통신: 웹소켓은 클라이언트와 서버 간의 양방향 통신을 가능하게 합니다. 이것은 서버에서 클라이언트로 데이터를 보낼 수 있고, 클라이언트에서 서버로 요청을 보낼 수 있다는 것을 의미합니다. 따라서, 서버에서 알람을 생성하고 클라이언트에게 전달할 수 있습니다.
2. 실시간 업데이트: 일반적인 HTTP 통신은 클라이언트에서 서버로 요청을 보내고 서버가 응답을 주는 방식입니다. 이 때문에 실시간으로 업데이트된 데이터를 받기 위해서는 주기적으로 페이지를 새로고침해야 합니다. 하지만 웹소켓을 사용하면 서버에서 새로운 데이터가 생성되면 즉시 클라이언트로 전달되므로 페이지 새로고침 없이도 실시간으로 알람을 받을 수 있습니다.
3. 웹소켓 연결 유지: 웹소켓은 일반적으로 클라이언트가 페이지를 새로고침하거나 이동해도 연결을 유지할 수 있습니다. 따라서, 사용자가 웹 페이지를 이동하거나 새로고침해도 웹소켓을 통해 알람을 계속 받을 수 있습니다.

</pre>
