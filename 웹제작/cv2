import cv2

# 얼굴 인식용 haarcascade 파일 경로
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# GStreamer 파이프라인을 이용하여 libcamera 스트림을 읽어옵니다.
libcamera_cmd = "libcamera-vid --inline --width 640 --height 480 --framerate 24 -t 0 --codec h264 -o - | gst-launch-1.0 -q fdsrc ! h264parse ! decodebin ! videoconvert ! appsink"

# 카메라 캡처 초기화
cap = cv2.VideoCapture(libcamera_cmd, cv2.CAP_GSTREAMER)

if not cap.isOpened():
    print("카메라를 열 수 없습니다.")
    exit()

while True:
    # 프레임 읽기
    ret, frame = cap.read()
    
    if not ret:
        print("카메라에서 프레임을 읽을 수 없습니다.")
        break
    
    # 그레이스케일로 변환
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    
    # 얼굴 검출
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))
    
    # 검출된 얼굴 주위에 사각형 그리기
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)
    
    # 결과 프레임 표시
    cv2.imshow('Face Detection', frame)
    
    # 'q' 키를 누르면 종료
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 자원 해제
cap.release()
cv2.destroyAllWindows()
